#include <iostream>
#include <iomanip>
#include <vector>

using namespace std;

typedef long long ll;

const vector<int> primes{ 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,
47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127,
131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199 };

void numPF(ll n, vector<int> &PC) {
	ll PF_indx = 0, PF = primes[PF_indx], ans = 0;
	while (PF * PF <= n) {
		while (n % PF == 0) {
			n /= PF;
			++PC[PF_indx];
		}
		PF = primes[++PF_indx];
	}
	if (n > PF) ++PC[PF_indx + 1];
	else if (n != 1) ++PC[PF_indx];
	return;
}

int main() {
	int n;

	cin >> n;
	while (n != 0) {
		vector<int> primesContained(46);
		for (int i = n; i > 1; --i) {
			numPF(i, primesContained);
		}
		int len = 45;
		while (primesContained[len] == 0)
			--len;

		cout << setw(3) << right << n << setw(3) << "! =";
		for (int i = 0; i <= len; ++i) {
			cout << setw(3) << right << primesContained[i];
		}
		cout << "\n";
		cin >> n;
	}
	return 0;
}
